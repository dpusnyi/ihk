{"version":3,"sources":["../../src/controllers/tokenController.js"],"names":["mongoClient","require","MongoClient","url","tokenController","createLog","req","log","data","connect","err","client","db","collection","insertOne","results","close","retrieveLog","search","console","find","toArray"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,MAAMA,cAAcC,QAAQ,SAAR,EAAmBC,WAAvC;AACA,MAAMC,MAAM,4BAAZ;;AAGA,MAAMC,eAAN,CAAsB;;AAEpB,QAAMC,SAAN,CAAgBC,GAAhB,EAAqB;AACnB,QAAIC,MAAMD,IAAIE,IAAd;AACAR,gBAAYS,OAAZ,CAAoBN,GAApB,EAAyB,CAACO,GAAD,EAAMC,MAAN,KAAiB;AACxC,YAAMC,KAAKD,OAAOC,EAAP,CAAU,QAAV,CAAX;AACA,YAAMC,aAAaD,GAAGC,UAAH,CAAc,MAAd,CAAnB;AACAA,iBAAWC,SAAX,CAAqBP,GAArB,EAA0B,CAACG,GAAD,EAAMK,OAAN,KAAkB;AACxCJ,eAAOK,KAAP;AACH,OAFD;AAGD,KAND;AAOD;;AAED,QAAMC,WAAN,CAAkBX,GAAlB,EAAuB;AACrB,QAAIY,SAASZ,IAAIE,IAAjB;AACAR,gBAAYS,OAAZ,CAAoBN,GAApB,EAAyB,CAACO,GAAD,EAAMC,MAAN,KAAiB;AACxC,YAAMC,KAAKD,OAAOC,EAAP,CAAU,QAAV,CAAX;AACA,YAAMC,aAAaD,GAAGC,UAAH,CAAc,MAAd,CAAnB;AACA,UAAGH,GAAH,EAAQ,OAAOS,QAAQZ,GAAR,CAAYG,GAAZ,CAAP;AACRG,iBAAWO,IAAX,CAAgBF,MAAhB,EAAwBG,OAAxB,CAAgC,CAACX,GAAD,EAAMK,OAAN,KAAkB;AAC9CJ,eAAOK,KAAP;AACH,OAFD;AAGD,KAPD;AAQD;;AAvBmB;;kBA2BP,IAAIZ,eAAJ,E","file":"tokenController.js","sourcesContent":["import config from \"../../config\";\r\nimport _ from 'lodash';\r\nimport generator from 'generate-password';\r\nimport request from 'request';\r\nimport http from 'http';\r\nconst mongoClient = require(\"mongodb\").MongoClient;\r\nconst url = \"mongodb://localhost:27017/\";\r\n\r\n\r\nclass tokenController {\r\n\r\n  async createLog(req) {\r\n    let log = req.data\r\n    mongoClient.connect(url, (err, client) => {\r\n      const db = client.db(\"logsdb\");\r\n      const collection = db.collection(\"logs\");\r\n      collection.insertOne(log, (err, results) => {    \r\n          client.close();\r\n      });\r\n    });\r\n  }\r\n\r\n  async retrieveLog(req) {\r\n    let search = req.data\r\n    mongoClient.connect(url, (err, client) => {\r\n      const db = client.db(\"logsdb\");\r\n      const collection = db.collection(\"logs\");\r\n      if(err) return console.log(err);\r\n      collection.find(search).toArray((err, results) => {     \r\n          client.close();\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default new tokenController();\r\n"]}