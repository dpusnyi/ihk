{"version":3,"sources":["../../src/controllers/tokenController.js"],"names":["mongoClient","require","MongoClient","url","eosjs","fetch","TextDecoder","TextEncoder","tokenController","createLog","req","console","log","body","client","connect","db","collection","result","insertOne","close","err","retrieveLog","search","hash","findOne"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,MAAMA,cAAcC,QAAQ,SAAR,EAAmBC,WAAvC;AACA,MAAMC,MAAM,4BAAZ;AACA,MAAMC,QAAQH,QAAQ,OAAR,CAAd;AACA,MAAMI,QAAQJ,QAAQ,YAAR,CAAd;AACA,MAAM,EAAEK,WAAF,EAAeC,WAAf,KAA+BN,QAAQ,eAAR,CAArC;;AAEA,MAAMO,eAAN,CAAsB;;AAEpB,QAAMC,SAAN,CAAgBC,GAAhB,EAAqB;AACnBC,YAAQC,GAAR,CAAYF,IAAIG,IAAhB;AACA,QAAID,MAAMF,IAAIG,IAAd;AACA,QAAI;AACF,UAAIC,SAAS,MAAMd,YAAYe,OAAZ,CAAoBZ,GAApB,CAAnB;AACA,UAAIa,KAAKF,OAAOE,EAAP,CAAU,QAAV,CAAT;AACA,UAAIC,aAAaD,GAAGC,UAAH,CAAc,MAAd,CAAjB;AACA,UAAIC,SAAS,MAAMD,WAAWE,SAAX,CAAqBP,GAArB,CAAnB;AACAE,aAAOM,KAAP;AACA,aAAOF,MAAP;AACD,KAPD,CAOE,OAAOG,GAAP,EAAY;AACZV,cAAQC,GAAR,CAAYS,GAAZ;AACD;AACF;;AAED,QAAMC,WAAN,CAAkBZ,GAAlB,EAAuB;AACrB,QAAIa,SAASb,IAAIG,IAAjB;AACA,QAAIU,OAAOC,IAAX,EACE,IAAI;AACF,UAAIV,SAAS,MAAMd,YAAYe,OAAZ,CAAoBZ,GAApB,CAAnB;AACA,UAAIa,KAAKF,OAAOE,EAAP,CAAU,QAAV,CAAT;AACA,UAAIC,aAAaD,GAAGC,UAAH,CAAc,MAAd,CAAjB;AACA,UAAIC,SAAS,MAAMD,WAAWQ,OAAX,CAAmB,EAAC,QAAQF,OAAOC,IAAhB,EAAnB,CAAnB;AACAV,aAAOM,KAAP;AACA,aAAOF,MAAP;AACD,KAPD,CAOE,OAAOG,GAAP,EAAY;AACZV,cAAQC,GAAR,CAAYS,GAAZ;AACD;AACJ;;AA9BmB;;kBAkCP,IAAIb,eAAJ,E","file":"tokenController.js","sourcesContent":["import config from \"../../config\";\r\nimport _ from 'lodash';\r\nimport generator from 'generate-password';\r\nimport request from 'request';\r\nimport http from 'http';\r\nconst mongoClient = require(\"mongodb\").MongoClient;\r\nconst url = \"mongodb://localhost:27017/\";\r\nconst eosjs = require(\"eosjs\");\r\nconst fetch = require(\"node-fetch\");                          \r\nconst { TextDecoder, TextEncoder } = require(\"text-encoding\");\r\n\r\nclass tokenController {\r\n\r\n  async createLog(req) {\r\n    console.log(req.body)\r\n    let log = req.body\r\n    try {\r\n      let client = await mongoClient.connect(url);\r\n      let db = client.db(\"logsdb\");\r\n      let collection = db.collection(\"logs\");\r\n      let result = await collection.insertOne(log);\r\n      client.close();\r\n      return result;\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  async retrieveLog(req) {\r\n    let search = req.body\r\n    if (search.hash)\r\n      try {\r\n        let client = await mongoClient.connect(url);\r\n        let db = client.db(\"logsdb\");\r\n        let collection = db.collection(\"logs\");\r\n        let result = await collection.findOne({\"hash\": search.hash});\r\n        client.close();\r\n        return result;\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n  }\r\n\r\n}\r\n\r\nexport default new tokenController();\r\n"]}